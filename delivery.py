# -*- coding: utf-8 -*-
"""Colab 시작하기의 사본

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1LoXPlxcLzMKLxdp-A72LWcvTEncscpsb
"""

#delivery_request.py

from rider_matching import RiderMatchingService

class DeliveryRequestService:
    def __init__(self, matching_service: RiderMatchingService):
        self.matching_service = matching_service

    def request_delivery(self, user_id: str, order_id: str):
        """
        사용자로부터 배달 요청을 받아 매칭 서비스에 전달
        """
        print(f"[App] 사용자({user_id})가 주문({order_id})을 요청했습니다.")
        result = self.matching_service.find_rider(order_id)
        print(f"[App] 매칭 결과: {result}")
        return result

#rider_matching.py

from notification import NotificationService

class RiderMatchingService:
    def __init__(self, notification_service: NotificationService):
        self.notification_service = notification_service

    def find_rider(self, order_id: str) -> str:
        """
        매칭 서버에서 배달원 검색 및 알림 전송
        """
        rider_id = self._select_rider(order_id)
        self.notification_service.send_notification(rider_id, order_id)
        # 시뮬레이션: 배달원이 수락했다고 가정
        response = "accepted"
        print(f"[Server] 배달원({rider_id})이 주문({order_id})을 {response}했습니다.")
        return rider_id if response == "accepted" else None

    def _select_rider(self, order_id: str) -> str:
        # 간단한 매칭 로직 예시
        print(f"[Server] 주문({order_id})에 적합한 배달원을 조회합니다.")
        return "rider_123"

#main.py

from delivery_request import DeliveryRequestService
from rider_matching import RiderMatchingService
from notification import NotificationService


def main():
    user_id = "user_456"
    order_id = "order_789"

    notification_service = NotificationService()
    matching_service = RiderMatchingService(notification_service)
    request_service = DeliveryRequestService(matching_service)

    matched_rider = request_service.request_delivery(user_id, order_id)
    if matched_rider:
        print(f"[App] 사용자에게 배달원({matched_rider}) 정보를 전달합니다.")
    else:
        print("[App] 매칭에 실패했습니다.")


if __name__ == "__main__":
    main()

#알림.py
class NotificationService:
    def send_notification(self, rider_id: str, order_id: str):
        """
        배달원 앱으로 배달 요청 알림 전송
        """
        print(f"[Notification] 배달원 앱({rider_id})에 주문({order_id}) 알림을 보냈습니다.")